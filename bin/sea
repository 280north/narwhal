#!/bin/bash

# this script is intended to work both in narwhal/bin and in
# any project's bin dir; it's copied by tusk --init.

# get the absolute path of the executable
SELF_PATH=$(cd -P -- "$(dirname -- "$0")" && pwd -P) && SELF_PATH=$SELF_PATH/$(basename -- "$0")

# resolve symlinks
while [ -h "$SELF_PATH" ]; do
	DIR=$(dirname -- "$SELF_PATH")
	SYM=$(readlink -- "$SELF_PATH")
	SELF_PATH=$(cd -- "$DIR" && cd -- $(dirname -- "$SYM") && pwd)/$(basename -- "$SYM")
done

PACKAGE_HOME=$(dirname -- "$(dirname -- "$SELF_PATH")")

# which -s narwhal doesn't work (os x 10.5, kriskowal)
if [ -f "$PACKAGE_HOME"/bin/narwhal ]; then
    NARWHAL="$PACKAGE_HOME"/bin/narwhal
else
    env narwhal -e '' >/dev/null 2>&1
    if [ "$?" -ne 127 ]; then
        NARWHAL=narwhal
    else
        echo "ERROR: narwhal is not in your PATH or $PACKAGE_HOME/bin."
        exit
    fi
fi

if [ -f "$PACKAGE_HOME"/narwhal.conf ]; then
    source "$PACKAGE_HOME"/narwhal.conf
    export NARWHAL_DEFAULT_PLATFORM
fi

export OLDSEA="$SEA"
export SEA="$PACKAGE_HOME"
export SEALVL="$((SEALVL + 1))" 
export PATH="$("$NARWHAL" --package "$PACKAGE_HOME" --path :)"

if [ "$#" -lt 1 ]; then
    echo PATH="$PATH" >&2
    echo SEA="$SEA" >&2
    echo SEALVL="$SEALVL" >&2
    "$SHELL"
else
    "$SHELL" -c "$*"
fi
if [ "$OLDSEA" != "" ]; then
    echo SEA="$OLDSEA" >&2
fi
echo SEALVL="$((SEALVL - 1))" >&2

